<Activity mc:Ignorable="sap sap2010" x:Class="Config_RD" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Path location of file master config RD." Name="in_PathConfigRd" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Sheet name in master config RD to get getsudo year and month." Name="in_SheetGetsudoYearMonth" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="io_Config" Type="InOutArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property sap2010:Annotation.AnnotationText="Data table of all calendar." Name="out_dt_CalendarRaw" Type="OutArgument(sd:DataTable)" />
    <x:Property sap2010:Annotation.AnnotationText="Data table of all master model." Name="out_dt_MasterModelRaw" Type="OutArgument(sd:DataTable)" />
    <x:Property sap2010:Annotation.AnnotationText="Data table of all model RD category." Name="out_dt_RdCategory" Type="OutArgument(sd:DataTable)" />
    <x:Property sap2010:Annotation.AnnotationText="Data table of model big category." Name="out_dt_BigCategory" Type="OutArgument(sd:DataTable)" />
    <x:Property sap2010:Annotation.AnnotationText="Data table of model other category." Name="out_dt_OtherCategory" Type="OutArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1220,5747</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Config_RD_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Config_RD" sap:VirtualizedContainerService.HintSize="1164,5682" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:DateTime" sap2010:Annotation.AnnotationText="Start date time of process config RD used for logic to count duration." Default="[DateTime.Now]" Name="StartProcess" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch Config RD" sap:VirtualizedContainerService.HintSize="1102,5571" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence DisplayName="Try Config RD" sap:VirtualizedContainerService.HintSize="1064,5343" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Boolean" sap2010:Annotation.AnnotationText="Check existing of file master config RD." Default="False" Name="ExistsFileConfigRd" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message - Started Process Read Master Config RD" sap:VirtualizedContainerService.HintSize="1002,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Started process read master config RD&quot;]" />
          <ui:FileExistsX DisplayName="File Exists Config RD" Exists="[ExistsFileConfigRd]" sap:VirtualizedContainerService.HintSize="1002,133" sap2010:WorkflowViewState.IdRef="FileExistsX_1" Path="[in_PathConfigRd]" />
          <Switch x:TypeArguments="x:Boolean" DisplayName="Switch Exists File Config RD" Expression="[ExistsFileConfigRd]" sap:VirtualizedContainerService.HintSize="1002,4663" sap2010:WorkflowViewState.IdRef="Switch`1_1">
            <Sequence x:Key="True" DisplayName="True Exists File Config RD" sap:VirtualizedContainerService.HintSize="962,4455" sap2010:WorkflowViewState.IdRef="Sequence_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope Config RD" FileConflictResolution="None" sap:VirtualizedContainerService.HintSize="900,4344" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
                <ueab:ExcelProcessScopeX.Body>
                  <ActivityAction x:TypeArguments="ui:IExcelProcess">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do Excel Process Scope Config RD" sap:VirtualizedContainerService.HintSize="866,4257" sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" CreateNewFile="False" DisplayName="Use Excel File Config RD" sap:VirtualizedContainerService.HintSize="804,4146" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="[in_PathConfigRd]">
                        <ueab:ExcelApplicationCard.Body>
                          <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do Use Excel File Config RD" sap:VirtualizedContainerService.HintSize="770,3879" sap2010:WorkflowViewState.IdRef="Sequence_8">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="s:DateTime" sap2010:Annotation.AnnotationText="Convertion of getsudo year month into data type DateTime." Name="ConvertGetsudoYearMonth" />
                                <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Getsudo year month of N-1." Name="GetsudoYearMonthNmin1" />
                                <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Getsudo year month of N-2." Name="GetsudoYearMonthNmin2" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ueab:ExcelForEachRowX DisplayName="For Each Excel Row Getsudo Year Month - Config RD" EmptyRowBehavior="Stop" HasHeaders="True" sap:VirtualizedContainerService.HintSize="708,969" sap2010:WorkflowViewState.IdRef="ExcelForEachRowX_1" Range="[Excel.Sheet(in_SheetGetsudoYearMonth)]" SaveAfterEachRow="False">
                                <ueab:ExcelForEachRowX.Body>
                                  <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                                    <ActivityAction.Argument1>
                                      <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                                    </ActivityAction.Argument1>
                                    <ActivityAction.Argument2>
                                      <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                    </ActivityAction.Argument2>
                                    <Sequence DisplayName="Do For Each Excel Row Getsudo Year Month - Config RD" sap:VirtualizedContainerService.HintSize="526,788" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If Condition="[CurrentRow.ByIndex.Item(0).ToString.Trim.ToLower.Contains(&quot;getsudo year&quot;)]" DisplayName="If Getsudo Year - Config RD" sap:VirtualizedContainerService.HintSize="484,328" sap2010:WorkflowViewState.IdRef="If_1">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Sequence DisplayName="Sequence If Getsudo Year - Config RD" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign DisplayName="Assign Getsudo Year - Config RD" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[io_Config("GetsudoYear")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[CurrentRow.ByIndex.Item(1).ToString.Trim]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence DisplayName="Sequence Else Getsudo Year - Config RD" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                      <If Condition="[CurrentRow.ByIndex.Item(0).ToString.Trim.ToLower.Contains(&quot;getsudo month&quot;)]" DisplayName="If Getsudo Month - Config RD" sap:VirtualizedContainerService.HintSize="484,328" sap2010:WorkflowViewState.IdRef="If_2">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Sequence DisplayName="Sequence If Getsudo Year - Config RD" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign DisplayName="Assign Getsudo Month - Config RD" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Object">[io_Config("GetsudoMonth")]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[CurrentRow.ByIndex.Item(1).ToString.Trim.PadLeft(2, CChar("0"))]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence DisplayName="Sequence Else Getsudo Month - Config RD" sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </ActivityAction>
                                </ueab:ExcelForEachRowX.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ueab:ExcelForEachRowX>
                              <ui:MultipleAssign sap2010:Annotation.AnnotationText="Get getsudo year month N-1and N-2.&#xA;&#xA;WARNING: Change the order of multiple assign will be impact of the process." DisplayName="Multiple Assign Getsudo Year Month Nmin1 - Config RD" sap:VirtualizedContainerService.HintSize="708,513" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                                <ui:MultipleAssign.AssignOperations>
                                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="s:DateTime">[ConvertGetsudoYearMonth]</OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="s:DateTime">[DateTime.ParseExact(io_Config("GetsudoYear").ToString+io_Config("GetsudoMonth").ToString, "yyyyM",System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:String">[GetsudoYearMonthNmin1]</OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:String">[ConvertGetsudoYearMonth.AddMonths(-1).ToString("yyyyMM")]</InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:String">[GetsudoYearMonthNmin2]</OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:String">[ConvertGetsudoYearMonth.AddMonths(-2).ToString("yyyyMM")]</InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:Object">[io_Config("GetsudoPeriodNmin1")]</OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:Object">[GetsudoYearMonthNmin1]</InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:Object">[io_Config("GetsudoPeriodNmin2")]</OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:Object">[GetsudoYearMonthNmin2]</InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:Object">[io_Config("GetsudoYearNmin1")]</OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:Object">[GetsudoYearMonthNmin1.Substring(0,4)]</InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:Object">[io_Config("GetsudoMonthNmin1")]</OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:Object">[GetsudoYearMonthNmin1.Substring(4).TrimStart("0"c)]</InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:Object">[io_Config("GetsudoYearNmin2")]</OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:Object">[GetsudoYearMonthNmin2.Substring(0,4)]</InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:Object">[io_Config("GetsudoMonthNmin2")]</OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:Object">[GetsudoYearMonthNmin2.Substring(4).TrimStart("0"c)]</InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:Object">[io_Config("FormatPeriodNmin1")]</OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:Object">[ConvertGetsudoYearMonth.AddMonths(-1).ToString("MMM\'yy")]</InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:Object">[io_Config("FormatPeriodNmin2")]</OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:Object">[ConvertGetsudoYearMonth.AddMonths(-2).ToString("MMM\'yy")]</InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="x:Object">[io_Config("FormatPeriodN")]</OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="x:Object">[ConvertGetsudoYearMonth.ToString("MMM\'yy")]</InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                  </scg:List>
                                </ui:MultipleAssign.AssignOperations>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:MultipleAssign>
                              <ueab:ReadRangeX DisplayName="Read Range Get Data Calendar - Config RD" sap:VirtualizedContainerService.HintSize="708,167" sap2010:WorkflowViewState.IdRef="ReadRangeX_1" Range="[Excel.Sheet(io_Config(&quot;SheetHoliday&quot;).ToString.Trim).Range(&quot;A:H&quot;)]" SaveTo="[out_dt_CalendarRaw]" />
                              <If Condition="[Not (out_dt_CalendarRaw Is Nothing OrElse out_dt_CalendarRaw.RowCount = 0)]" DisplayName="If Data Table Calendar Raw is Not Empty - Config RD" sap:VirtualizedContainerService.HintSize="708,51" sap2010:WorkflowViewState.IdRef="If_3">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence DisplayName="Then DtCalendarRaw is Not Empty - Config RD" sap:VirtualizedContainerService.HintSize="376,280" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:FilterDataTable sap2010:Annotation.AnnotationText="Remove empty row in data table calendar raw." DataTable="[out_dt_CalendarRaw]" DisplayName="Filter Data Table Calendar Raw Remove Empty Row - Config RD" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="334,192" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[out_dt_CalendarRaw]" SelectColumnsMode="Keep">
                                      <ui:FilterDataTable.Filters>
                                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="8">
                                          <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                          </ui:FilterOperationArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.Filters>
                                      <ui:FilterDataTable.SelectColumns>
                                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                                          <x:Null />
                                        </scg:List>
                                      </ui:FilterDataTable.SelectColumns>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:FilterDataTable>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Else DtCalendarRaw is Not Empty - Config RD" sap:VirtualizedContainerService.HintSize="300,113" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Throw DisplayName="Throw Exception Empty Data Calendar - Config RD" Exception="[New SystemException(&quot;Empty data in sheet &quot; + io_Config(&quot;SheetHoliday&quot;).ToString.Trim)]" sap:VirtualizedContainerService.HintSize="258,25" sap2010:WorkflowViewState.IdRef="Throw_3" />
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ui:ExcelReadRange AddHeaders="True" DataTable="[out_dt_MasterModelRaw]" DisplayName="Read Range Get Data Master Model - Config RD" sap:VirtualizedContainerService.HintSize="708,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="[io_Config(&quot;SheetMasterModel&quot;).ToString.Trim]">
                                <ui:ExcelReadRange.Range>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </ui:ExcelReadRange.Range>
                              </ui:ExcelReadRange>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="708,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="486,259" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ueab:ReadRangeX DisplayName="Read Range Get Data Master Model - Config RD" sap:VirtualizedContainerService.HintSize="444,167" sap2010:WorkflowViewState.IdRef="ReadRangeX_2" Range="[Excel.Sheet(io_Config(&quot;SheetMasterModel&quot;).ToString.Trim)]" SaveTo="[out_dt_MasterModelRaw]" />
                                  </Sequence>
                                </ui:CommentOut.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:CommentOut>
                              <If Condition="[Not (out_dt_MasterModelRaw Is Nothing OrElse out_dt_MasterModelRaw.RowCount = 0)]" DisplayName="If Data Table Master Model Raw is Not Empty - Config RD" sap:VirtualizedContainerService.HintSize="708,440" sap2010:WorkflowViewState.IdRef="If_4">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence DisplayName="Then DtCalendarRaw is Not Empty - Config RD" sap:VirtualizedContainerService.HintSize="376,283" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:FilterDataTable sap2010:Annotation.AnnotationText="Remove empty row in data table master model raw." DataTable="[out_dt_MasterModelRaw]" DisplayName="Filter Data Table Master Model Raw Remove Empty Row - Config RD" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="334,191" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[out_dt_MasterModelRaw]" SelectColumnsMode="Keep">
                                      <ui:FilterDataTable.Filters>
                                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="8">
                                          <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[0]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[2]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[3]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[4]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                          </ui:FilterOperationArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.Filters>
                                      <ui:FilterDataTable.SelectColumns>
                                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                                          <x:Null />
                                        </scg:List>
                                      </ui:FilterDataTable.SelectColumns>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:FilterDataTable>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Else DtCalendarRaw is Not Empty - Config RD" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Throw DisplayName="Throw Exception Empty Data Master Model - Config RD" Exception="[New SystemException(&quot;Empty data in sheet &quot; + io_Config(&quot;SheetMasterModel&quot;).ToString.Trim)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_4" />
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ui:ExcelReadRange AddHeaders="True" DataTable="[out_dt_RdCategory]" DisplayName="Read Range Get Data Master Model - Config RD" sap:VirtualizedContainerService.HintSize="708,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="[io_Config(&quot;SheetMasterMethod&quot;).ToString.Trim]">
                                <ui:ExcelReadRange.Range>
                                  <InArgument x:TypeArguments="x:String">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                </ui:ExcelReadRange.Range>
                              </ui:ExcelReadRange>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="708,337" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="486,259" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ueab:ReadRangeX DisplayName="Read Range Get Data Master Method - Config RD" sap:VirtualizedContainerService.HintSize="444,167" sap2010:WorkflowViewState.IdRef="ReadRangeX_3" Range="[Excel.Sheet(io_Config(&quot;SheetMasterMethod&quot;).ToString.Trim)]" SaveTo="[out_dt_RdCategory]" />
                                  </Sequence>
                                </ui:CommentOut.Body>
                              </ui:CommentOut>
                              <If Condition="[Not (out_dt_MasterModelRaw Is Nothing OrElse out_dt_MasterModelRaw.RowCount = 0)]" DisplayName="If Data Table Master Method is Not Empty - Config RD" sap:VirtualizedContainerService.HintSize="708,762" sap2010:WorkflowViewState.IdRef="If_5">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence DisplayName="Then DtCalendarRaw is Not Empty - Config RD" sap:VirtualizedContainerService.HintSize="421,605" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Manipulation_DataTable RdCategory Workflow - Config RD" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Workflow\Utils\Manipulation_DataTable.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_DataTableName">RdCategory</InArgument>
                                        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_Manipulation">[out_dt_RdCategory]</InOutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:FilterDataTable DataTable="[out_dt_RdCategory]" DisplayName="Filter Data Table Big Category - Config RD" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="379,160" sap2010:WorkflowViewState.IdRef="FilterDataTable_3" OutputDataTable="[out_dt_BigCategory]" SelectColumnsMode="Remove">
                                      <ui:FilterDataTable.Filters>
                                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                          <ui:FilterOperationArgument BooleanOperator="And" Operator="STARTSWITH">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["Big"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument BooleanOperator="Or" Operator="STARTSWITH">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["BIG"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument BooleanOperator="Or" Operator="STARTSWITH">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["big"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.Filters>
                                      <ui:FilterDataTable.SelectColumns>
                                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                                          <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.SelectColumns>
                                    </ui:FilterDataTable>
                                    <ui:FilterDataTable DataTable="[out_dt_RdCategory]" DisplayName="Filter Data Table Other Category - Config RD" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="379,161" sap2010:WorkflowViewState.IdRef="FilterDataTable_4" OutputDataTable="[out_dt_OtherCategory]" SelectColumnsMode="Remove">
                                      <ui:FilterDataTable.Filters>
                                        <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                                          <ui:FilterOperationArgument BooleanOperator="And" Operator="STARTSWITH">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["OTHER"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument BooleanOperator="Or" Operator="STARTSWITH">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["Other"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                          <ui:FilterOperationArgument BooleanOperator="Or" Operator="STARTSWITH">
                                            <ui:FilterOperationArgument.Column>
                                              <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                            </ui:FilterOperationArgument.Column>
                                            <ui:FilterOperationArgument.Operand>
                                              <InArgument x:TypeArguments="x:String">["other"]</InArgument>
                                            </ui:FilterOperationArgument.Operand>
                                          </ui:FilterOperationArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.Filters>
                                      <ui:FilterDataTable.SelectColumns>
                                        <scg:List x:TypeArguments="InArgument" Capacity="4">
                                          <InArgument x:TypeArguments="x:Int32">[1]</InArgument>
                                        </scg:List>
                                      </ui:FilterDataTable.SelectColumns>
                                    </ui:FilterDataTable>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Else DtCalendarRaw is Not Empty - Config RD" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Throw DisplayName="Throw Exception Empty Data Master Method - Config RD" Exception="[New SystemException(&quot;Empty data in sheet &quot; + io_Config(&quot;SheetMasterMethod&quot;).ToString.Trim)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_5" />
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </ActivityAction>
                        </ueab:ExcelApplicationCard.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ueab:ExcelApplicationCard>
                    </Sequence>
                  </ActivityAction>
                </ueab:ExcelProcessScopeX.Body>
              </ueab:ExcelProcessScopeX>
            </Sequence>
            <Sequence x:Key="False" DisplayName="False Exists File Config RD" sap:VirtualizedContainerService.HintSize="450,265" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message - File Config RD is Not Exists " sap:VirtualizedContainerService.HintSize="388,92" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Error" Message="[&quot;File master config RD is not exists&quot;]" />
              <Throw DisplayName="Throw SystemException File Config RD is Not Exists" Exception="[New SystemException(&quot;File master config RD is not exists&quot;)]" sap:VirtualizedContainerService.HintSize="388,25" sap2010:WorkflowViewState.IdRef="Throw_1" />
            </Sequence>
          </Switch>
          <ui:LogMessage DisplayName="Log Message - Duration Process Read Master Config RD" sap:VirtualizedContainerService.HintSize="1002,92" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Duration of process read master config RD: &quot; + Split(((Date.Now-StartProcess).Duration).ToString,&quot;.&quot;)(0)]" />
          <ui:LogMessage DisplayName="Log Message - Finished Process Read Master Config RD" sap:VirtualizedContainerService.HintSize="1002,92" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Finished process read master config RD&quot;]" />
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1068,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Catches Exception Config RD" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message - Catches Exception Config RD" sap:VirtualizedContainerService.HintSize="334,92" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Error" Message="[&quot;Error occurred in process read master config RD: &quot; + exception.Message]" />
              <Throw DisplayName="Throw Exception Config RD" Exception="[New SystemException(&quot;Error occurred in process read master config RD: &quot; + exception.Message)]" sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="Throw_2" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>