<Activity mc:Ignorable="sap sap2010" x:Class="Input_Paper_By_Model" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Path location of file daily plan." Name="in_PathPaperByModel" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Sheet name of paper by model in daily plan file." Name="in_SheetPaperByModel" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="The number of maximum retries process." Name="in_NumberOfRetries" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Interval times to retry process." Name="in_RetryInterval" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Sheet name of paper in daily plan file." Name="in_SheetPaper" Type="InArgument(x:String)" />
    <x:Property Name="out_IsDiffSpkNett" Type="OutArgument(x:Boolean)" />
    <x:Property Name="out_IsDiffSpkOp" Type="OutArgument(x:Boolean)" />
    <x:Property Name="out_IsDiffRsRd" Type="OutArgument(x:Boolean)" />
    <x:Property Name="out_IsDiffRsOp" Type="OutArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1234,2206</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Input_Paper_By_Model_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>OfficeDevPnP.Core</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Input_Paper_By_Model" sap:VirtualizedContainerService.HintSize="908,2141" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Temp1" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Temp2" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch Input Paper By Model" sap:VirtualizedContainerService.HintSize="846,2030" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence DisplayName="Try Input Paper By Model" sap:VirtualizedContainerService.HintSize="808,1802" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message - Started Input Paper By Model" sap:VirtualizedContainerService.HintSize="746,92" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Started process input paper by model&quot;]" />
          <ui:RetryScope DisplayName="Retry Scope Input Paper By Model" sap:VirtualizedContainerService.HintSize="746,1427" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="[CInt(in_NumberOfRetries)]" RetryInterval="[TimeSpan.Parse(in_RetryInterval)]">
            <ui:RetryScope.ActivityBody>
              <ActivityAction>
                <Sequence DisplayName="Action Retry Scope Input Paper By Model" sap:VirtualizedContainerService.HintSize="704,1252" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope Input Paper By Model" FileConflictResolution="None" sap:VirtualizedContainerService.HintSize="642,1141" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
                    <ueab:ExcelProcessScopeX.Body>
                      <ActivityAction x:TypeArguments="ui:IExcelProcess">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do Excel Process Scope Input Paper By Model" sap:VirtualizedContainerService.HintSize="608,1054" sap2010:WorkflowViewState.IdRef="Sequence_5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" CreateNewFile="False" DisplayName="Use Excel File Input Paper By Model" sap:VirtualizedContainerService.HintSize="546,943" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="[in_PathPaperByModel]">
                            <ueab:ExcelApplicationCard.Body>
                              <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Do Use Excel File Input Paper By Model" sap:VirtualizedContainerService.HintSize="512,676" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Sequence DisplayName="Delete cells with formula errors" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="518,92" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Delete cells with formula errors&quot;]" />
                                    <ueab:ExcelForEachRowX DisplayName="For Each Excel Row" EmptyRowBehavior="Stop" HasHeaders="False" sap:VirtualizedContainerService.HintSize="518,450" sap2010:WorkflowViewState.IdRef="ExcelForEachRowX_1" Range="[Excel.Sheet(in_SheetPaperByModel).Range(&quot;O32:O81&quot;)]" SaveAfterEachRow="False">
                                      <ueab:ExcelForEachRowX.Body>
                                        <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                                          <ActivityAction.Argument1>
                                            <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                                          </ActivityAction.Argument1>
                                          <ActivityAction.Argument2>
                                            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                          </ActivityAction.Argument2>
                                          <If Condition="[CurrentRow.ByIndex(0).StartsWith(&quot;-&quot;)]" DisplayName="If cell value is negative" sap:VirtualizedContainerService.HintSize="484,269" sap2010:WorkflowViewState.IdRef="If_7">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Assign DisplayName="Delete value" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_13">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ue:ExcelValue">[CurrentRow.ByIndex(0)]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ue:ExcelValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_52">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </ActivityAction>
                                      </ueab:ExcelForEachRowX.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ueab:ExcelForEachRowX>
                                    <ueab:ExcelForEachRowX DisplayName="For Each Excel Row" EmptyRowBehavior="Stop" HasHeaders="False" sap:VirtualizedContainerService.HintSize="518,450" sap2010:WorkflowViewState.IdRef="ExcelForEachRowX_2" Range="[Excel.Sheet(in_SheetPaperByModel).Range(&quot;O117:O162&quot;)]" SaveAfterEachRow="False">
                                      <ueab:ExcelForEachRowX.Body>
                                        <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                                          <ActivityAction.Argument1>
                                            <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                                          </ActivityAction.Argument1>
                                          <ActivityAction.Argument2>
                                            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                                          </ActivityAction.Argument2>
                                          <If Condition="[CurrentRow.ByIndex(0).StartsWith(&quot;-&quot;)]" DisplayName="If cell value is negative" sap:VirtualizedContainerService.HintSize="484,269" sap2010:WorkflowViewState.IdRef="If_6">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If.Then>
                                              <Assign DisplayName="Delete value" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_12">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="ue:ExcelValue">[CurrentRow.ByIndex(0)]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="ue:ExcelValue">[""]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_51">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </ActivityAction>
                                      </ueab:ExcelForEachRowX.Body>
                                    </ueab:ExcelForEachRowX>
                                  </Sequence>
                                  <Sequence DisplayName="SPK NETT - Input Paper By Model" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:CommentOut sap2010:Annotation.AnnotationText="This process is replaced with formula in template file" DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="388,94" sap2010:WorkflowViewState.IdRef="CommentOut_22">
                                      <ui:CommentOut.Body>
                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,224" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke  Copy_Paste_Others_Model SPK NETT Workflow - Input Paper By Model" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Workflow\Process\Paper_By_Model\Copy_Paste_Others_Model.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">SPK NETT</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_PathPaperByModel">[in_PathPaperByModel]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaperByModel">[in_SheetPaperByModel]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaper">[in_SheetPaper]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FindRangeOthersModel">B1:B10000</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FindHeaderOthersModel">SPK NETT RD</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FindRangePaste">C1:C10000</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ValueToFindPaste">Others</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW1">C</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW1">E</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW3">F</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW3">G</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW4">H</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW4">J</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW4">F</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW3">E</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW1">D</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                      </ui:CommentOut.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:CommentOut>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke  Copy_Paste_Percentage_Big_Model SPK NETT Workflow - Input Paper By Model" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="Workflow\Process\Paper_By_Model\Copy_Paste_Percentage_Big_Model.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">
                                          <Literal x:TypeArguments="x:String">SPK NETT</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_PathPaperByModel">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_PathPaperByModel" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaperByModel">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_SheetPaperByModel" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaper">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_SheetPaper" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindRangePaste">
                                          <Literal x:TypeArguments="x:String">N1:N10000</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ValueToFindPaste">
                                          <Literal x:TypeArguments="x:String">%Big Model</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindRangeBigModelComp">
                                          <Literal x:TypeArguments="x:String">C1:C10000</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindBigModelComp">
                                          <Literal x:TypeArguments="x:String">Big Model Comp</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsAdjustComposition">
                                          <Literal x:TypeArguments="x:Boolean" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartWriteBigModel">
                                          <Literal x:TypeArguments="x:String">Q</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndWriteBigModel">
                                          <Literal x:TypeArguments="x:String">T</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartReadBigModel">
                                          <Literal x:TypeArguments="x:String">D</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndReadBigModel">
                                          <Literal x:TypeArguments="x:String">F</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_AdditionalCopyRange">
                                          <Literal x:TypeArguments="x:String">D77:F77</Literal>
                                        </InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke  Copy_Paste_Big_Model_Vol SPK NETT Workflow - Input Paper By Model" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="Workflow\Process\Paper_By_Model\Copy_Paste_Big_Model_Vol.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">SPK NETT</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_PathPaperByModel">[in_PathPaperByModel]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaperByModel">[in_SheetPaperByModel]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaper">[in_SheetPaper]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindRangePaste">C1:C10000</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ValueToFindPaste">Vol</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindRangeBigModel">B1:B10000</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindHeaderBigModel">SPK NETT RD</InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsAdjustComposition">False</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW1">C</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW1">E</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW1">D</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW3">E</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW4">F</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW3">F</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW3">G</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW4">J</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW4">H</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke  Copy_Paste_Percentage_Big_Model Adjust Composition SPK NETT Workflow - Input Paper By Model" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="Workflow\Process\Paper_By_Model\Copy_Paste_Percentage_Big_Model.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">SPK NETT</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_PathPaperByModel">[in_PathPaperByModel]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaperByModel">[in_SheetPaperByModel]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaper">[in_SheetPaper]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindRangePaste">N1:N10000</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ValueToFindPaste">%Big Model</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindRangeBigModelComp">C1:C10000</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindBigModelComp">Big Model Comp</InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsAdjustComposition">True</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartWriteBigModel">Q</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndWriteBigModel">T</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartReadBigModel">D</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndReadBigModel">F</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InvokeWorkflowFile>
                                    <ui:CommentOut sap2010:Annotation.AnnotationText="This process is replaced with formula in template file" DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="388,94" sap2010:WorkflowViewState.IdRef="CommentOut_23">
                                      <ui:CommentOut.Body>
                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,224" sap2010:WorkflowViewState.IdRef="Sequence_54">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke  Copy_Paste_Big_Model_Vol Adjust Composition SPK NETT Workflow - Input Paper By Model" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="Workflow\Process\Paper_By_Model\Copy_Paste_Big_Model_Vol.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">SPK NETT</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_PathPaperByModel">[in_PathPaperByModel]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaperByModel">[in_SheetPaperByModel]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaper">[in_SheetPaper]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FindRangePaste">C1:C10000</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ValueToFindPaste">Vol</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FindRangeBigModel">B1:B10000</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FindHeaderBigModel">SPK NETT RD</InArgument>
                                              <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsAdjustComposition">True</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW1">C</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW1">E</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW1">D</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW3">E</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW4">F</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW3">F</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW3">G</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW4">J</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW4">H</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                      </ui:CommentOut.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:CommentOut>
                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="CommentOut_21">
                                      <ui:CommentOut.Body>
                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="568,690" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Sequence sap:VirtualizedContainerService.HintSize="506,579" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ueab:ReadRangeX DisplayName="Read Range" HasHeaders="False" sap:VirtualizedContainerService.HintSize="444,168" sap2010:WorkflowViewState.IdRef="ReadRangeX_9" Range="[Excel.Sheet(in_SheetPaper).Range(&quot;D82:F82&quot;)]" SaveTo="[dt_Temp1]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ueab:ReadRangeX>
                                            <ueab:ReadRangeX DisplayName="Read Range" HasHeaders="False" sap:VirtualizedContainerService.HintSize="444,168" sap2010:WorkflowViewState.IdRef="ReadRangeX_10" Range="[Excel.Sheet(in_SheetPaper).Range(&quot;D88:F88&quot;)]" SaveTo="[dt_Temp2]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ueab:ReadRangeX>
                                            <If Condition="[dt_Temp1.Rows(0)(0).Equals(dt_Temp2.Rows(0)(0)) And dt_Temp1.Rows(0)(1).Equals(dt_Temp2.Rows(0)(1)) And dt_Temp1.Rows(0)(2).Equals(dt_Temp2.Rows(0)(2))]" sap:VirtualizedContainerService.HintSize="444,52" sap2010:WorkflowViewState.IdRef="If_5">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_9">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[out_IsDiffSpkNett]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_10">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[out_IsDiffSpkNett]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </Sequence>
                                      </ui:CommentOut.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:CommentOut>
                                  </Sequence>
                                  <Sequence DisplayName="SPK OP - Input Paper By Model" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:CommentOut sap2010:Annotation.AnnotationText="This process is replaced with formula in template file" DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="388,94" sap2010:WorkflowViewState.IdRef="CommentOut_24">
                                      <ui:CommentOut.Body>
                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,224" sap2010:WorkflowViewState.IdRef="Sequence_55">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke  Copy_Paste_Others_Model SPK OP Workflow - Input Paper By Model" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Workflow\Process\Paper_By_Model\Copy_Paste_Others_Model.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">SPK OP</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_PathPaperByModel">[in_PathPaperByModel]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaperByModel">[in_SheetPaperByModel]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaper">[in_SheetPaper]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FindRangeOthersModel">Y1:Y10000</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FindHeaderOthersModel">SPK OP</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FindRangePaste">N1:N10000</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ValueToFindPaste">Others</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW1">Z</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW1">AB</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW3">AC</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW3">AD</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW4">AE</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW4">AG</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW4">Q</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW3">P</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW1">O</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                      </ui:CommentOut.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:CommentOut>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke  Copy_Paste_Percentage_Big_Model SPK OP Workflow - Input Paper By Model" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="Workflow\Process\Paper_By_Model\Copy_Paste_Percentage_Big_Model.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">
                                          <Literal x:TypeArguments="x:String">SPK OP</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_PathPaperByModel">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_PathPaperByModel" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaperByModel">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_SheetPaperByModel" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaper">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_SheetPaper" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindRangePaste">
                                          <Literal x:TypeArguments="x:String">AK1:AK10000</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ValueToFindPaste">
                                          <Literal x:TypeArguments="x:String">%Big Model</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindRangeBigModelComp">
                                          <Literal x:TypeArguments="x:String">N1:N10000</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindBigModelComp">
                                          <Literal x:TypeArguments="x:String">Big Model Comp</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsAdjustComposition">
                                          <Literal x:TypeArguments="x:Boolean" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartWriteBigModel">
                                          <Literal x:TypeArguments="x:String">AN</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndWriteBigModel">
                                          <Literal x:TypeArguments="x:String">AQ</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartReadBigModel">
                                          <Literal x:TypeArguments="x:String">O</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndReadBigModel">
                                          <Literal x:TypeArguments="x:String">Q</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_AdditionalCopyRange">
                                          <Literal x:TypeArguments="x:String">O77:Q77</Literal>
                                        </InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke  Copy_Paste_Big_Model_Vol SPK OP Workflow - Input Paper By Model" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Workflow\Process\Paper_By_Model\Copy_Paste_Big_Model_Vol.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">SPK OP</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_PathPaperByModel">[in_PathPaperByModel]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaperByModel">[in_SheetPaperByModel]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaper">[in_SheetPaper]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindRangePaste">N1:N10000</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ValueToFindPaste">Vol</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindRangeBigModel">Y1:Y10000</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindHeaderBigModel">SPK OP</InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsAdjustComposition">False</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW1">Z</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW1">AB</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW1">O</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW3">P</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW4">Q</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW3">AC</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW3">AD</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW4">AG</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW4">AE</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke  Copy_Paste_Percentage_Big_Model Adjust Composition SPK OP Workflow - Input Paper By Model" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="Workflow\Process\Paper_By_Model\Copy_Paste_Percentage_Big_Model.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">SPK OP</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_PathPaperByModel">[in_PathPaperByModel]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaperByModel">[in_SheetPaperByModel]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaper">[in_SheetPaper]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindRangePaste">AK1:AK10000</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ValueToFindPaste">%Big Model</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindRangeBigModelComp">N1:N10000</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindBigModelComp">Big Model Comp</InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsAdjustComposition">True</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartWriteBigModel">AN</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndWriteBigModel">AQ</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartReadBigModel">O</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndReadBigModel">Q</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InvokeWorkflowFile>
                                    <ui:CommentOut sap2010:Annotation.AnnotationText="This process is replaced with formula in template file" DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="388,94" sap2010:WorkflowViewState.IdRef="CommentOut_25">
                                      <ui:CommentOut.Body>
                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,224" sap2010:WorkflowViewState.IdRef="Sequence_56">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke  Copy_Paste_Big_Model_Vol Adjust Composition SPK OP Workflow - Input Paper By Model" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Workflow\Process\Paper_By_Model\Copy_Paste_Big_Model_Vol.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">SPK OP</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_PathPaperByModel">[in_PathPaperByModel]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaperByModel">[in_SheetPaperByModel]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaper">[in_SheetPaper]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FindRangePaste">N1:N10000</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ValueToFindPaste">Vol</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FindRangeBigModel">Y1:Y10000</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FindHeaderBigModel">SPK OP</InArgument>
                                              <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsAdjustComposition">True</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW1">Z</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW1">AB</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW1">O</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW3">P</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW4">Q</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW3">AC</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW3">AD</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW4">AG</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW4">AE</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                      </ui:CommentOut.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:CommentOut>
                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="CommentOut_18">
                                      <ui:CommentOut.Body>
                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="512,458" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Sequence sap:VirtualizedContainerService.HintSize="450,347" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ueab:ReadRangeX DisplayName="Read Range" HasHeaders="False" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="ReadRangeX_3" Range="[Excel.Sheet(in_SheetPaper).Range(&quot;O82:Q82&quot;)]" SaveTo="[dt_Temp1]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ueab:ReadRangeX>
                                            <ueab:ReadRangeX DisplayName="Read Range" HasHeaders="False" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="ReadRangeX_4" Range="[Excel.Sheet(in_SheetPaper).Range(&quot;O88:Q88&quot;)]" SaveTo="[dt_Temp2]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ueab:ReadRangeX>
                                            <If Condition="[dt_Temp1.Rows(0)(0).Equals(dt_Temp2.Rows(0)(0)) And dt_Temp1.Rows(0)(1).Equals(dt_Temp2.Rows(0)(1)) And dt_Temp1.Rows(0)(2).Equals(dt_Temp2.Rows(0)(2))]" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="If_2">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[out_IsDiffSpkOp]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[out_IsDiffSpkOp]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </Sequence>
                                      </ui:CommentOut.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:CommentOut>
                                  </Sequence>
                                  <Sequence DisplayName="RS RD - Input Paper By Model" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:CommentOut sap2010:Annotation.AnnotationText="This process is replaced with formula in template file" DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="388,94" sap2010:WorkflowViewState.IdRef="CommentOut_26">
                                      <ui:CommentOut.Body>
                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,224" sap2010:WorkflowViewState.IdRef="Sequence_57">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke  Copy_Paste_Others_Model RS RD Workflow - Input Paper By Model" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Workflow\Process\Paper_By_Model\Copy_Paste_Others_Model.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">RS RD</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_PathPaperByModel">[in_PathPaperByModel]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaperByModel">[in_SheetPaperByModel]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaper">[in_SheetPaper]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FindRangeOthersModel">B1:B10000</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FindHeaderOthersModel">RS RD</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FindRangePaste">AA1:AA10000</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ValueToFindPaste">Others</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW1">C</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW1">E</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW3">F</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW3">G</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW4">H</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW4">J</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW4">AD</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW3">AC</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW1">AB</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                      </ui:CommentOut.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:CommentOut>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke  Copy_Paste_Percentage_Big_Model RS RD Workflow - Input Paper By Model" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Workflow\Process\Paper_By_Model\Copy_Paste_Percentage_Big_Model.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">
                                          <Literal x:TypeArguments="x:String">RS RD</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_PathPaperByModel">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_PathPaperByModel" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaperByModel">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_SheetPaperByModel" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaper">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_SheetPaper" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindRangePaste">
                                          <Literal x:TypeArguments="x:String">N1:N10000</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ValueToFindPaste">
                                          <Literal x:TypeArguments="x:String">WOT % Big Model</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindRangeBigModelComp">
                                          <Literal x:TypeArguments="x:String">AA1:AA10000</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindBigModelComp">
                                          <Literal x:TypeArguments="x:String">Big Model Comp</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsAdjustComposition">
                                          <Literal x:TypeArguments="x:Boolean" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartWriteBigModel">
                                          <Literal x:TypeArguments="x:String">Q</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndWriteBigModel">
                                          <Literal x:TypeArguments="x:String">T</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartReadBigModel">
                                          <Literal x:TypeArguments="x:String">AB</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndReadBigModel">
                                          <Literal x:TypeArguments="x:String">AD</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_AdditionalCopyRange">
                                          <Literal x:TypeArguments="x:String">AB77:AD77</Literal>
                                        </InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke  Copy_Paste_Big_Model_Vol SPK OP Workflow - Input Paper By Model" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Workflow\Process\Paper_By_Model\Copy_Paste_Big_Model_Vol.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">RS RD</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_PathPaperByModel">[in_PathPaperByModel]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaperByModel">[in_SheetPaperByModel]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaper">[in_SheetPaper]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindRangePaste">AA1:AA10000</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ValueToFindPaste">Vol</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindRangeBigModel">B1:B10000</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindHeaderBigModel">RS RD</InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsAdjustComposition">False</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW1">C</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW1">E</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW1">AB</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW3">AC</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW4">AD</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW3">F</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW3">G</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW4">J</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW4">H</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke  Copy_Paste_Percentage_Big_Model Adjust Composition RS RD Workflow - Input Paper By Model" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="Workflow\Process\Paper_By_Model\Copy_Paste_Percentage_Big_Model.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">RS RD</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_PathPaperByModel">[in_PathPaperByModel]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaperByModel">[in_SheetPaperByModel]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaper">[in_SheetPaper]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindRangePaste">N1:N10000</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ValueToFindPaste">WOT % Big Model</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindRangeBigModelComp">AA1:AA10000</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindBigModelComp">Big Model Comp</InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsAdjustComposition">True</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartWriteBigModel">Q</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndWriteBigModel">T</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartReadBigModel">AB</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndReadBigModel">AD</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InvokeWorkflowFile>
                                    <ui:CommentOut sap2010:Annotation.AnnotationText="This process is replaced with formula in template file" DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="388,94" sap2010:WorkflowViewState.IdRef="CommentOut_27">
                                      <ui:CommentOut.Body>
                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,224" sap2010:WorkflowViewState.IdRef="Sequence_58">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke  Copy_Paste_Big_Model_Vol Adjust Composition SPK OP Workflow - Input Paper By Model" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="Workflow\Process\Paper_By_Model\Copy_Paste_Big_Model_Vol.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">RS RD</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_PathPaperByModel">[in_PathPaperByModel]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaperByModel">[in_SheetPaperByModel]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaper">[in_SheetPaper]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FindRangePaste">AA1:AA10000</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ValueToFindPaste">Vol</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FindRangeBigModel">B1:B10000</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FindHeaderBigModel">RS RD</InArgument>
                                              <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsAdjustComposition">True</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW1">C</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW1">E</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW1">AB</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW3">AC</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW4">AD</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW3">F</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW3">G</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW4">J</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW4">H</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                      </ui:CommentOut.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:CommentOut>
                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="CommentOut_19">
                                      <ui:CommentOut.Body>
                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="568,574" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Sequence sap:VirtualizedContainerService.HintSize="450,347" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ueab:ReadRangeX DisplayName="Read Range" HasHeaders="False" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="ReadRangeX_5" Range="[Excel.Sheet(in_SheetPaper).Range(&quot;AB82:AD82&quot;)]" SaveTo="[dt_Temp1]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ueab:ReadRangeX>
                                            <ueab:ReadRangeX DisplayName="Read Range" HasHeaders="False" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="ReadRangeX_6" Range="[Excel.Sheet(in_SheetPaper).Range(&quot;AB88:AD88&quot;)]" SaveTo="[dt_Temp2]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ueab:ReadRangeX>
                                            <If Condition="[dt_Temp1.Rows(0)(0).Equals(dt_Temp2.Rows(0)(0)) And dt_Temp1.Rows(0)(1).Equals(dt_Temp2.Rows(0)(1)) And dt_Temp1.Rows(0)(2).Equals(dt_Temp2.Rows(0)(2))]" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="If_3">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[out_IsDiffRsRd]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[out_IsDiffRsRd]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </Sequence>
                                      </ui:CommentOut.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:CommentOut>
                                  </Sequence>
                                  <Sequence DisplayName="RS OP - Input Paper By Model" sap:VirtualizedContainerService.HintSize="450,81" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:CommentOut sap2010:Annotation.AnnotationText="This process is replaced with formula in template file" DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="388,94" sap2010:WorkflowViewState.IdRef="CommentOut_28">
                                      <ui:CommentOut.Body>
                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,224" sap2010:WorkflowViewState.IdRef="Sequence_59">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke  Copy_Paste_Others_Model RS OP Workflow - Input Paper By Model" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Workflow\Process\Paper_By_Model\Copy_Paste_Others_Model.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">RS OP</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_PathPaperByModel">[in_PathPaperByModel]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaperByModel">[in_SheetPaperByModel]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaper">[in_SheetPaper]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FindRangeOthersModel">Y1:Y10000</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FindHeaderOthersModel">RS OP</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FindRangePaste">AM1:AM10000</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ValueToFindPaste">Others</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW1">Z</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW1">AB</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW3">AC</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW3">AD</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW4">AE</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW4">AG</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW4">AP</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW3">AO</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW1">AN</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                      </ui:CommentOut.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:CommentOut>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke  Copy_Paste_Percentage_Big_Model RS OP Workflow - Input Paper By Model" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Workflow\Process\Paper_By_Model\Copy_Paste_Percentage_Big_Model.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">
                                          <Literal x:TypeArguments="x:String">RS OP</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_PathPaperByModel">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_PathPaperByModel" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaperByModel">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_SheetPaperByModel" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaper">
                                          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_SheetPaper" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindRangePaste">
                                          <Literal x:TypeArguments="x:String">AK1:AK10000</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ValueToFindPaste">
                                          <Literal x:TypeArguments="x:String">WOT % Big Model</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindRangeBigModelComp">
                                          <Literal x:TypeArguments="x:String">AM1:AM10000</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindBigModelComp">
                                          <Literal x:TypeArguments="x:String">Big Model Comp</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsAdjustComposition">
                                          <Literal x:TypeArguments="x:Boolean" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartWriteBigModel">
                                          <Literal x:TypeArguments="x:String">AN</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndWriteBigModel">
                                          <Literal x:TypeArguments="x:String">AQ</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartReadBigModel">
                                          <Literal x:TypeArguments="x:String">AN</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndReadBigModel">
                                          <Literal x:TypeArguments="x:String">AP</Literal>
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_AdditionalCopyRange">
                                          <Literal x:TypeArguments="x:String">AN77:AP77</Literal>
                                        </InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke  Copy_Paste_Big_Model_Vol RS OP Workflow - Input Paper By Model" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Workflow\Process\Paper_By_Model\Copy_Paste_Big_Model_Vol.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">RS OP</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_PathPaperByModel">[in_PathPaperByModel]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaperByModel">[in_SheetPaperByModel]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaper">[in_SheetPaper]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindRangePaste">AM1:AM10000</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ValueToFindPaste">Vol</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindRangeBigModel">Y1:Y10000</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindHeaderBigModel">RS OP</InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsAdjustComposition">False</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW1">Z</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW1">AB</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW1">AN</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW3">AO</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW4">AP</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW3">AC</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW3">AD</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW4">AG</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW4">AE</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke  Copy_Paste_Percentage_Big_Model Adjust Composition RS OP Workflow - Input Paper By Model" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="Workflow\Process\Paper_By_Model\Copy_Paste_Percentage_Big_Model.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">RS OP</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_PathPaperByModel">[in_PathPaperByModel]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaperByModel">[in_SheetPaperByModel]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaper">[in_SheetPaper]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindRangePaste">A1:AK10000</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ValueToFindPaste">WOT % Big Model</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindRangeBigModelComp">AM1:AM10000</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_FindBigModelComp">Big Model Comp</InArgument>
                                        <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsAdjustComposition">True</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartWriteBigModel">AN</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndWriteBigModel">AQ</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartReadBigModel">AN</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndReadBigModel">AP</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InvokeWorkflowFile>
                                    <ui:CommentOut sap2010:Annotation.AnnotationText="This process is replaced with formula in template file" DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="388,94" sap2010:WorkflowViewState.IdRef="CommentOut_29">
                                      <ui:CommentOut.Body>
                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,224" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke  Copy_Paste_Big_Model_Vol Adjust Composition RS OP Workflow - Input Paper By Model" sap:VirtualizedContainerService.HintSize="388,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="Workflow\Process\Paper_By_Model\Copy_Paste_Big_Model_Vol.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">RS OP</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_PathPaperByModel">[in_PathPaperByModel]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaperByModel">[in_SheetPaperByModel]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_SheetPaper">[in_SheetPaper]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FindRangePaste">AM1:AM10000</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ValueToFindPaste">Vol</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FindRangeBigModel">Y1:Y10000</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_FindHeaderBigModel">RS OP</InArgument>
                                              <InArgument x:TypeArguments="x:Boolean" x:Key="in_IsAdjustComposition">True</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW1">Z</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW1">AB</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW1">AN</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW3">AO</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnW4">AP</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW3">AC</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW3">AD</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnEndCopyW4">AG</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_ColumnStartCopyW4">AE</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                      </ui:CommentOut.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:CommentOut>
                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="CommentOut_20">
                                      <ui:CommentOut.Body>
                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="568,574" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Sequence sap:VirtualizedContainerService.HintSize="715,347" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ueab:ReadRangeX DisplayName="Read Range" HasHeaders="False" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="ReadRangeX_7" Range="[Excel.Sheet(in_SheetPaper).Range(&quot;AN82:AP82&quot;)]" SaveTo="[dt_Temp1]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ueab:ReadRangeX>
                                            <ueab:ReadRangeX DisplayName="Read Range" HasHeaders="False" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="ReadRangeX_8" Range="[Excel.Sheet(in_SheetPaper).Range(&quot;AN88:AP88&quot;)]" SaveTo="[dt_Temp2]">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ueab:ReadRangeX>
                                            <If Condition="[dt_Temp1.Rows(0)(0).Equals(dt_Temp2.Rows(0)(0)) And dt_Temp1.Rows(0)(1).Equals(dt_Temp2.Rows(0)(1)) And dt_Temp1.Rows(0)(2).Equals(dt_Temp2.Rows(0)(2))]" sap:VirtualizedContainerService.HintSize="388,52" sap2010:WorkflowViewState.IdRef="If_4">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[out_IsDiffRsOp]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">[out_IsDiffRsOp]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </Sequence>
                                      </ui:CommentOut.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:CommentOut>
                                  </Sequence>
                                </Sequence>
                              </ActivityAction>
                            </ueab:ExcelApplicationCard.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ueab:ExcelApplicationCard>
                        </Sequence>
                      </ActivityAction>
                    </ueab:ExcelProcessScopeX.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ueab:ExcelProcessScopeX>
                </Sequence>
              </ActivityAction>
            </ui:RetryScope.ActivityBody>
            <ui:RetryScope.Condition>
              <ActivityFunc x:TypeArguments="x:Boolean" />
            </ui:RetryScope.Condition>
          </ui:RetryScope>
          <ui:LogMessage DisplayName="Log Message - Finished Input Paper By Model" sap:VirtualizedContainerService.HintSize="746,92" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Finished process input paper by model&quot;]" />
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="812,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Catches Exception Input Paper By Model" sap:VirtualizedContainerService.HintSize="450,268" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message - Catches Exception Input Paper By Model" sap:VirtualizedContainerService.HintSize="388,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Error occurred in process input paper by model: &quot; + exception.Message]" />
              <Throw DisplayName="Throw Exception Input Paper By Model" Exception="[New SystemException(&quot;Error occurred in process input paper by model: &quot; + exception.Message)]" sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="Throw_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>